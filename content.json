[{"title":"test","date":"2018-02-11T05:50:49.000Z","path":"2018/02/11/test/","text":"1.UI flow This picture shows how the report will dispaly in our UI after customer start a request. Overview Figure 1 UI flow Overview content This is the place where customer interact with the web site.Data will be showed in chart by the type which customer choose. IUserRequest To divide the request date to form the unit and date parameter based on the information which customer request and choosing configuration,and form the response data to satisfy the request. ITimeSlice This interface will provide method to do data-fragment,data-assmble. BackEnd Where to send request and send back the response. 2.Data structuresTo display the specific data in chart, the most important thing is to do divideTime based on date/configuration and form the request by fragmentTime and assembleRequest.After using DataTransceiver to send request and reveive data,the response data needed to be reunit by handleResponseData.The two interface definition is as below: Figure 1 ITimeSlice Definition 123456title TimeSliceArray Definitionclass TimeSlice&#123; - startTime: String - endTime: String&#125; 1234567891011121314151617181920212223242526272829303132333435363738394041424344title ITimeSlice Operation interface ITimeSlice&#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;class AssembleRequestHandler &#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;class YearTimeSliceHandler &#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;class MonthTimeSliceHandler&#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;class WeekTimeSliceHandler&#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;class DayTimeSliceHandler&#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;class ShiftTimeSliceHandler&#123; +fragmentTime(targetUnit, startTime, endTime): timeslice; +assembleRequest(queryParams, timeSliceArray) &#125;ITimeSlice &lt;|.. AssembleRequestHandlerAssembleRequestHandler &lt;|.. YearTimeSliceHandlerAssembleRequestHandler &lt;|.. MonthTimeSliceHandlerAssembleRequestHandler &lt;|.. WeekTimeSliceHandlerAssembleRequestHandler &lt;|.. DayTimeSliceHandlerAssembleRequestHandler &lt;|.. ShiftTimeSliceHandler The abstract AssembleRequestHandler will implement the public method assembleRequest and those 5 subclass such as YearlyTimeSlice will overwrite the method fragmentTime by the transfering parameters of different date and unit. Figure 2 IUserRequest Definition 1234567title DivideTimeParamsArray Definitionclass DivideTimeParams&#123; -targetUnit: string; -startTime: string; -endTime: string;&#125; 123456789101112131415161718192021222324252627282930313233343536title IUserRequest Operation interface IUserRequest&#123; +divideTime(date, type): dividetimeparams; +handleResponseData(responseData, type);&#125;class YearResponseHandler &#123; +divideTime(date, type): dividetimeparams; +handleResponseData(responseData, type);&#125;class MonthResponseHandler&#123; +divideTime(date, type): dividetimeparams; +handleResponseData(responseData, type);&#125;class WeekResponseHandler&#123; +divideTime(date, type): dividetimeparams; +handleResponseData(responseData, type);&#125;class DayResponseHandler&#123; +divideTime(date, type): dividetimeparams; +handleResponseData(responseData, type);&#125;class ShiftResponseHandler&#123; +divideTime(date, type): dividetimeparams; +handleResponseData(responseData, type);&#125;IUserRequest &lt;|.. YearResponseHandlerIUserRequest &lt;|.. MonthResponseHandlerIUserRequest &lt;|.. WeekResponseHandlerIUserRequest &lt;|.. DayResponseHandlerIUserRequest &lt;|.. ShiftResponseHandler those 5 subclass such as YearResponseHandler will implement the IUserRequest interface and overwrite the method divideTime and handleResponseData to deal with the response data to satisfy the request.","categories":[],"tags":[]},{"title":"Hello Hexo","date":"2017-11-20T16:02:10.000Z","path":"2017/11/21/hello-world/","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[{"name":"Hexo","slug":"Hexo","permalink":"http://taoliqiqi.github.io/categories/Hexo/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://taoliqiqi.github.io/tags/hexo/"}]}]